C51 COMPILER V9.60.0.0   COMMON                                                            07/04/2025 11:08:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\Objects\Common.obj
COMPILER INVOKED BY: D:\Nandkishor\Software\C51\BIN\C51.EXE ..\..\N76E003_BSP_Keil_C51_V1.0.6\N76E003_BSP_Keil_C51_V1.0.
                    -6\Common\Common.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\N76E003_BSP_Keil_C51_V1.0.6;..\..\N76E003_BSP_Keil_C51_V1.0.6\N76E0
                    -03_BSP_Keil_C51_V1.0.6\Include;..\..\N76E003_BSP_Keil_C51_V1.0.6\N76E003_BSP_Keil_C51_V1.0.6\Common) DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\Common.lst) TABS(2) OBJECT(.\Objects\Common.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          #include "N76E003.h"
  15          #include "Common.h"
  16          #include "Delay.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          
  20          #define FOSC_160000
  21          
  22          //----------------------------------------------------------------------------------
  23          // UART0 baud rate initial setting 
  24          //----------------------------------------------------------------------------------
  25          //void InitialUART0_Timer1(UINT32 u32Baudrate)    //T1M = 1, SMOD = 1
  26          //{
  27          //    P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  28          //    P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  29            
  30          //    SCON = 0x50;      //UART0 Mode1,REN=1,TI=1
  31          //    TMOD |= 0x20;     //Timer1 Mode1
  32              
  33          //    set_SMOD;         //UART0 Double Rate Enable
  34          //    set_T1M;
  35          //    clr_BRCK;         //Serial port 0 baud rate clock source = Timer1
  36           
  37          //#ifdef FOSC_160000
  38          //    TH1 = 256 - (1000000/u32Baudrate+1);               /*16 MHz */
  39          //#endif      
  40          //#ifdef FOSC_166000
  41          //    TH1 = 256 - (1037500/u32Baudrate);                 /*16.6 MHz */
  42          //#endif
  43          //    set_TR1;
  44          //    set_TI;           //For printf function must setting TI = 1
  45          //}
C51 COMPILER V9.60.0.0   COMMON                                                            07/04/2025 11:08:55 PAGE 2   

  46          
  47          void InitialUART0_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  48          {
  49   1          P06_Quasi_Mode;    //Setting UART pin as Quasi mode for transmit
  50   1          P07_Input_Mode;   //Setting UART pin as input mode for recieve    
  51   1          SCON = 0x50;      //UART0 Mode1,REN=1,TI=1
  52   1          set_SMOD;        //UART0 Double Rate Enable
  53   1          T3CON &= 0xF8;  //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  54   1          set_BRCK;      //UART0 baud rate clock source = Timer3
  55   1      #ifdef FOSC_160000
  56   1          RH3= HIBYTE(65536 - (1000000/u32Baudrate)-1);      /*16 MHz */
  57   1          RL3= LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  58   1      #endif
  59   1      #ifdef FOSC_166000
                  RH3= HIBYTE(65536 - (1037500/u32Baudrate));      /*16.6 MHz */
                  RL3 = LOBYTE(65536 - (1037500/u32Baudrate));     /*16.6 MHz */
              #endif
  63   1          set_TR3;      //Trigger Timer3
  64   1          set_TI;     //For printf function must setting TI = 1
  65   1      }
  66          
  67          //void InitialUART0_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  68          //{
  69          //    P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  70          //    P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit 
  71            
  72          //    SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
  73          //    set_SMOD;        //UART0 Double Rate Enable
  74          //    T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  75          //    set_BRCK;        //UART0 baud rate clock source = Timer3
  76          
  77          //#ifdef FOSC_160000
  78          //    RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  79          //    RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  80          //#endif
  81          //#ifdef FOSC_166000
  82          //    RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
  83          //    RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
  84          //#endif
  85          //    set_TR3;         //Trigger Timer3
  86          //    set_TI;          //For printf function must setting TI = 1
  87          //}
  88          
  89          /*UINT8 Receive_Data_From_UART0(void)
  90          {
  91              UINT8 c;
  92              while (!RI);
  93              c = SBUF;
  94              RI = 0;
  95              return (c);
  96          }*/
  97          
  98          /*void Send_Data_To_UART0 (UINT8 c)
  99          {
 100              TI = 0;
 101              SBUF = c;
 102              while(TI==0);
 103          }*/
 104          
 105          
 106          //void InitialUART1_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
 107          //{
C51 COMPILER V9.60.0.0   COMMON                                                            07/04/2025 11:08:55 PAGE 3   

 108          //    P02_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
 109          //    P16_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
 110            
 111          //    SCON_1 = 0x50;    //UART1 Mode1,REN_1=1,TI_1=1
 112          //    T3CON = 0x08;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
 113          //    clr_BRCK;
 114            
 115          //#ifdef FOSC_160000
 116          //    RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
 117          //    RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
 118          //#endif
 119          //#ifdef FOSC_166000
 120          //    RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
 121          //    RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
 122          //#endif
 123          //    set_TR3;         //Trigger Timer3
 124          //}
 125          
 126          /*UINT8 Receive_Data_From_UART1(void)
 127          {
 128              UINT8 c;
 129              
 130              while (!RI_1);
 131              c = SBUF_1;
 132              RI_1 = 0;
 133              return (c);
 134          }*/
 135          
 136          /*void Send_Data_To_UART1 (UINT8 c)
 137          {
 138              TI_1 = 0;
 139              SBUF_1 = c;
 140              while(TI_1==0);
 141          }*/
 142          
 143          
 144          #ifdef SW_Reset
              void SW_Reset(void)
              {
                  TA = 0xAA;
                  TA = 0x55;
                  set_SWRST;
              }
              #endif
 152          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    105    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
